/* ---------- imports explicites ---------- */
import java.util.Properties
import java.io.FileInputStream
/* ---------------------------------------- */

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dev.flutter.flutter-gradle-plugin'
}

/* ---------- chargement des secrets ---------- */
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
/* -------------------------------------------- */

def storeFilePath = keystoreProperties['storeFile']


android {
    namespace 'com.zone01.deck01'
    compileSdk flutter.compileSdkVersion
    ndkVersion  flutter.ndkVersion

    defaultConfig {
        applicationId 'com.zone01.deck01'  // idem Play Store
        minSdk        23
        targetSdk     flutter.targetSdkVersion
        versionCode   flutter.versionCode
        versionName   flutter.versionName
    }

    /* ---------- signature Release ---------- */
    signingConfigs {
        release {
            if (!storeFilePath) {
                throw new GradleException("La cl√© 'storeFile' est absente de key.properties")
            }
            def jksFile = rootProject.file(storeFilePath)
            if (!jksFile.exists()) {
                throw new GradleException("Keystore introuvable : ${jksFile}")
            }

            storeFile     jksFile
            storePassword keystoreProperties['storePassword']
            keyAlias      keystoreProperties['keyAlias']
            keyPassword   keystoreProperties['keyPassword']
        }
    }

    buildTypes {

        release {
            signingConfig     signingConfigs.release
            minifyEnabled     true              // false pour debug
            shrinkResources   true
            proguardFiles     getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    /* ---------- Java 17 obligatoire avec AGP 8 ---------- */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}
flutter { source '../..' }   // ne touchez pas
apply plugin: 'com.google.gms.google-services'

